import edu.princeton.cs.algs4.In;
import edu.princeton.cs.algs4.StdOut;
import edu.princeton.cs.algs4.StdDraw;
import java.util.Arrays;

public class FastCollinearPoints {
    
    private int segCount = 0;
    private LineSegment[] segments = new LineSegment[1];
    
    public FastCollinearPoints(Point[] points) {
        
    }
    
    public int numberOfSegments() {
        return segCount;
    }
    
    public LineSegment[] segments() {
        return segments;
    }
    
    private void resizeArray() {
        LineSegment[] temp = new LineSegment[(segments.length * 2)];
        for (int i = 0; i < segCount; i++) {
            temp[i] = segments[i];
        }
        segments = temp;
    }
    
    public static void main(String args[]) {
        // read the n points from a file
        In in = new In(args[0]);
        int n = in.readInt();
        Point[] points = new Point[n];
        for (int i = 0; i < n; i++) {
            int x = in.readInt();
            int y = in.readInt();
            points[i] = new Point(x, y);
        }
        
        // draw the points
        StdDraw.enableDoubleBuffering();
        StdDraw.setXscale(0, 32768);
        StdDraw.setYscale(0, 32768);
        for (Point p : points) {
            p.draw();
        }
        StdDraw.show();
       
        
        // print and draw the line segments
        FastCollinearPoints collinear = new FastCollinearPoints(points);
        for (LineSegment segment : collinear.segments()) {
            if (segment != null) {
                StdOut.println(segment);
                segment.draw();
            }
        }
        StdDraw.show();
    }
    
}
    
    