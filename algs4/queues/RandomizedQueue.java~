import edu.princeton.cs.algs4.StdRandom;

public class RandomizedQueue<Item> {
    
    private Item[] a = (Item[]) new Object[1];
    private int n = 0;
    
    public RandomizedQueue() {
        
    }
    
    private void resize(int max) {
        Item[] temp = (Item[]) new Object[max];
        int k = 0;
        for (int i = 0; i < n; i++) {
            temp[k] = a[i];
            k++;
        }
        a = temp;
    }
    
    public boolean isEmpty() {
        return n == 0;
    }
    
    public int size() {
        return n;
    }
    
    public void enqueue(Item item) {
        if (n == a.length) { resize(2*a.length); }
        a[n] = item;
        n++;
    }
    
    public Item dequeue() {
        int k = StdRandom.uniform(0, n);
        Item item = a[k];
        a[k] = a[n-1];
        a[n-1] = null;
        n--;
        if (n > 0 && n == a.length/4) { resize(a.length/2); }
        return item;
    }
    
    public Item sample() {
        int k = StdRandom.uniform(1, n + 1);
        System.out.println(k);
        Item item = a[k-1];
        return item;
    }
    
    public static void main(String[] args) {
        RandomizedQueue<String> randq = new RandomizedQueue<String>();
        randq.enqueue("ola");
        randq.enqueue("ke");
        randq.enqueue("ase");
        System.out.println(randq.dequeue());
        System.out.println(randq.dequeue());
        System.out.println(randq.dequeue());
    }
}
    